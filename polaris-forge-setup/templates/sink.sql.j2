CREATE SINK IF NOT EXISTS leaderboard
 FROM mv_leaderboard
 WITH (
   connector='iceberg',
   type = 'append-only',
   force_append_only='true',
   database.name = '{{ balloon_game_db }}',
   table.name = 'leaderboard',
   warehouse.path = '{{ plf_catalog_name }}',
   catalog.name = '{{ plf_catalog_name }}',
   catalog.type = 'rest',
   catalog.uri = '{{ plf_polaris_catalog_uri }}',
   catalog.credential = '{{ principal_client_id }}:{{ principal_client_secret }}',
   catalog.scope='PRINCIPAL_ROLE:ALL',
   s3.endpoint = '{{ plf_aws_endpoint_url }}',
   s3.access.key = '{{ plf_aws_access_key_id  | default("test") }}',
   s3.secret.key = '{{ plf_aws_secret_access_key  | default("test") }}',
   s3.region = '{{ plf_aws_region }}',
   s3.path.style.access = 'true'
);

CREATE SINK IF NOT EXISTS balloon_color_stats
 FROM mv_balloon_color_stats
 WITH (
   connector='iceberg',
   type = 'append-only',
   force_append_only='true',
   database.name = '{{ balloon_game_db }}',
   table.name = 'balloon_color_stats',
   warehouse.path = '{{ plf_catalog_name }}',
   catalog.name = '{{ plf_catalog_name }}',
   catalog.type = 'rest',
   catalog.uri = '{{ plf_polaris_catalog_uri }}',
   catalog.credential = '{{ principal_client_id }}:{{ principal_client_secret }}',
   catalog.scope='PRINCIPAL_ROLE:ALL',
   s3.endpoint = '{{ plf_aws_endpoint_url }}',
   s3.access.key = '{{ plf_aws_access_key_id  | default("test") }}',
   s3.secret.key = '{{ plf_aws_secret_access_key  | default("test") }}',
   s3.region = '{{ plf_aws_region }}',
   s3.path.style.access = 'true'
);


-- Timeseries 

CREATE SINK IF NOT EXISTS realtime_scores
 FROM mv_realtime_scores
 WITH (
   connector='iceberg',
   type = 'append-only',
   force_append_only='true',
   database.name = '{{ balloon_game_db }}',
   table.name = 'realtime_scores',
   warehouse.path = '{{ plf_catalog_name }}',
   catalog.name = '{{ plf_catalog_name }}',
   catalog.type = 'rest',
   catalog.uri = '{{ plf_polaris_catalog_uri }}',
   catalog.credential = '{{ principal_client_id }}:{{ principal_client_secret }}',
   catalog.scope='PRINCIPAL_ROLE:ALL',
   s3.endpoint = '{{ plf_aws_endpoint_url }}',
   s3.access.key = '{{ plf_aws_access_key_id  | default("test") }}',
   s3.secret.key = '{{ plf_aws_secret_access_key  | default("test") }}',
   s3.region = '{{ plf_aws_region }}',
   s3.path.style.access = 'true'
);

CREATE SINK IF NOT EXISTS balloon_colored_pops
 FROM mv_balloon_colored_pops
 WITH (
   connector='iceberg',
   type = 'append-only',
   force_append_only='true',
   database.name = '{{ balloon_game_db }}',
   table.name = 'balloon_colored_pops',
   warehouse.path = '{{ plf_catalog_name }}',
   catalog.name = '{{ plf_catalog_name }}',
   catalog.type = 'rest',
   catalog.uri = '{{ plf_polaris_catalog_uri }}',
   catalog.credential = '{{ principal_client_id }}:{{ principal_client_secret }}',
   catalog.scope='PRINCIPAL_ROLE:ALL',
   s3.endpoint = '{{ plf_aws_endpoint_url }}',
   s3.access.key = '{{ plf_aws_access_key_id  | default("test") }}',
   s3.secret.key = '{{ plf_aws_secret_access_key  | default("test") }}',
   s3.region = '{{ plf_aws_region }}',
   s3.path.style.access = 'true'
);

CREATE SINK IF NOT EXISTS color_performance_trends
 FROM mv_color_performance_trends
 WITH (
   connector='iceberg',
   type = 'append-only',
   force_append_only='true',
   database.name = '{{ balloon_game_db }}',
   table.name = 'color_performance_trends',
   warehouse.path = '{{ plf_catalog_name }}',
   catalog.name = '{{ plf_catalog_name }}',
   catalog.type = 'rest',
   catalog.uri = '{{ plf_polaris_catalog_uri }}',
   catalog.credential = '{{ principal_client_id }}:{{ principal_client_secret }}',
   catalog.scope='PRINCIPAL_ROLE:ALL',
   s3.endpoint = '{{ plf_aws_endpoint_url }}',
   s3.access.key = '{{ plf_aws_access_key_id  | default("test") }}',
   s3.secret.key = '{{ plf_aws_secret_access_key  | default("test") }}',
   s3.region = '{{ plf_aws_region }}',
   s3.path.style.access = 'true'
);
