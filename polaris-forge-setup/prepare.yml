#!ansible-playbook
---
- name: Prepare the environment for setting up polaris
  hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - defaults/main.yml

  pre_tasks:
    - name: Install required collections
      ansible.builtin.command: ansible-galaxy collection install community.crypto
      changed_when: false

  tasks:
    - name: Ensure key directory exists with secure permissions
      ansible.builtin.file:
        path: "{{ plf_k8s_dir }}/polaris"
        state: directory
        mode: "0700"
      tags:
        - rsa
        - setup

    - name: Check if RSA keys already exist
      ansible.builtin.stat:
        path: "{{ plf_k8s_dir }}/polaris/rsa_key"
      register: private_key_stat
      tags:
        - rsa
        - setup

    - name: Generate RSA private key
      community.crypto.openssl_privatekey:
        path: "{{ plf_k8s_dir }}/polaris/rsa_key"
        size: 4096
        type: RSA
        format: "pkcs8"
        mode: "0600"
      when: not private_key_stat.stat.exists
      tags:
        - rsa
        - setup

    - name: Generate RSA public key
      community.crypto.openssl_publickey:
        path: "{{ plf_k8s_dir }}/polaris/rsa_key.pub"
        privatekey_path: "{{ plf_k8s_dir }}/polaris/rsa_key"
        mode: "0644"
      when: not private_key_stat.stat.exists
      tags:
        - rsa
        - setup

    - name: Get RSA keys exist
      ansible.builtin.stat:
        path: "{{ item }}"
      loop:
        - "{{ plf_k8s_dir }}/polaris/rsa_key"
        - "{{ plf_k8s_dir }}/polaris/rsa_key.pub"
      register: key_stats
      loop_control:
        label: "{{ item }}"
      tags:
        - rsa
        - verify

    - name: Verify keys exists
      ansible.builtin.fail:
        msg: "{{ item.path }} does not exist"
      when: not item.stat.exists
      loop: "{{ key_stats.results }}"
      loop_control:
        label: "{{ item.stat.path }}"
      tags:
        - rsa
        - verify

    - name: Display key generation status
      ansible.builtin.debug:
        msg:
          - "RSA keys generated successfully"
          - "Private key location: {{ plf_k8s_dir }}/polaris/rsa_key"
          - "Public key location: {{ plf_k8s_dir }}/polaris/rsa_key.pub"
      tags:
        - rsa
        - verify

    - name: Check of bootstrap credentials file exists
      ansible.builtin.stat:
        path: "{{ plf_k8s_dir }}/polaris/.bootstrap-credentials.env"
      register: bootstrap_credentials_file
      tags:
        - bootstrap
        - k8s

    - name: Generate credentials
      ansible.builtin.set_fact:
        bootstrap_client_id: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_lowercase', 'digits'], length=8) }}"
        bootstrap_client_secret: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_lowercase', 'digits'], length=12) }}"
        plf_jdbc_password: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_lowercase', 'digits'], length=12) }}"
        risingwave_pg_password: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_lowercase', 'digits'], length=12) }}"
        risingwave_minio_password: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_lowercase', 'digits'], length=12) }}"
      tags:
        - bootstrap
        - k8s

    - name: Generate bootstrap credentials file
      ansible.builtin.template:
        src: templates/bootstrap-credentials.env.j2
        dest: "{{ plf_k8s_dir }}/polaris/.bootstrap-credentials.env"
        mode: "0600"
      when: not bootstrap_credentials_file.stat.exists
      tags:
        - bootstrap
        - k8s

    - name: Check of PostgreSQL helm.cattle.io/HelmChart exists
      ansible.builtin.stat:
        path: "{{ plf_k8s_dir }}/features/postgresql.yaml"
      register: postgresql_file
      tags:
        - bootstrap
        - k8s

    - name: Generate PostgreSQL helm.cattle.io/HelmChart
      ansible.builtin.template:
        src: templates/postgresql.yml.j2
        dest: "{{ plf_k8s_dir }}/features/postgresql.yaml"
        mode: "0600"
      when: not postgresql_file.stat.exists
      tags:
        - bootstrap
        - k8s

    - name: Check of persistence.xml helm.cattle.io/HelmChart exists
      ansible.builtin.stat:
        path: "{{ plf_k8s_dir }}/polaris/persistence.xml"
      register: persistence_xml_file
      tags:
        - bootstrap
        - k8s

    - name: Generate JPA persistence.xml
      ansible.builtin.template:
        src: templates/persistence.xml.j2
        dest: "{{ plf_k8s_dir }}/polaris/persistence.xml"
        mode: "0600"
      when: not postgresql_file.stat.exists and not persistence_xml_file.stat.exists
      tags:
        - bootstrap
        - k8s

    - name: Check of persistence.xml helm.cattle.io/HelmChart exists
      ansible.builtin.stat:
        path: "{{ plf_k8s_dir }}/polaris/.polaris.env"
      register: polaris_env_file
      tags:
        - bootstrap
        - k8s
    - name: Generate polaris.env
      ansible.builtin.template:
        src: templates/polaris.env.j2
        dest: "{{ plf_k8s_dir }}/polaris/.polaris.env"
        mode: "0600"
      when: not polaris_env_file.stat.exists
      tags:
        - bootstrap
        - k8s

    - name: Check of Risingwave helm.cattle.io/HelmChart exists
      ansible.builtin.stat:
        path: "{{ plf_k8s_dir }}/features/risingwave.yaml"
      register: risingwave_file
      tags:
        - bootstrap
        - k8s

    - name: Generate Risingwave helm.cattle.io/HelmChart
      ansible.builtin.template:
        src: templates/risingwave.yaml.j2
        dest: "{{ plf_k8s_dir }}/features/risingwave.yaml"
        mode: "0600"
      when: not risingwave_file.stat.exists
      tags:
        - bootstrap
        - k8s
