---
# Check Kafka namespace
- name: Wait for Kafka namespace to be active
  kubernetes.core.k8s_info:
    kind: Namespace
    name: "{{ kafka_namespace | default('kafka') }}"
    api_version: v1
  register: kafka_ns_status
  until: kafka_ns_status.resources[0].status.phase is defined and kafka_ns_status.resources[0].status.phase ==
    "Active"
  retries: 30
  delay: 10
  tags:
    - namespace
    - kafka

# Check Kafka Operator deployment
- name: Wait for Kafka Operator deployment to be ready
  kubernetes.core.k8s_info:
    kind: Deployment
    name: strimzi-cluster-operator
    namespace: "{{ kafka_namespace | default('kafka') }}"
    api_version: apps/v1
  register: kafka_op_status
  until: >
    kafka_op_status.resources[0].status.availableReplicas is defined and
    kafka_op_status.resources[0].status.availableReplicas > 0 and
    kafka_op_status.resources[0].status.readyReplicas is defined and
    kafka_op_status.resources[0].status.readyReplicas == kafka_op_status.resources[0].status.replicas
  retries: 60
  delay: 10
  tags:
    - deployment
    - kafka

- name: Wait for Kafka Entity Operator deployment to be ready
  kubernetes.core.k8s_info:
    kind: Deployment
    name: my-cluster-entity-operator
    namespace: "{{ kafka_namespace | default('kafka') }}"
    api_version: apps/v1
  register: kafka_entity_op_status
  until: >
    kafka_entity_op_status.resources[0].status.availableReplicas is defined and
    kafka_entity_op_status.resources[0].status.availableReplicas > 0 and
    kafka_entity_op_status.resources[0].status.readyReplicas is defined and
    kafka_entity_op_status.resources[0].status.readyReplicas == kafka_entity_op_status.resources[0].status.replicas
  retries: 60
  delay: 20
  tags:
    - deployment
    - kafka

- name: Wait for Kafka NodePool to be ready
  kubernetes.core.k8s_info:
    kind: KafkaNodePool
    name: dual-role
    namespace: "{{ kafka_namespace | default('kafka') }}"
    api_version: kafka.strimzi.io/v1beta2
  register: kafka_nodepool_status
  until: >
    kafka_nodepool_status.resources[0].status.replicas is defined and
    kafka_nodepool_status.resources[0].status.replicas > 0
  retries: 60
  delay: 20
  tags:
    - nodepool
    - kafka

- name: Wait for Kafka Cluster to be ready
  kubernetes.core.k8s_info:
    kind: Kafka
    name: my-cluster
    namespace: "{{ kafka_namespace | default('kafka') }}"
    api_version: kafka.strimzi.io/v1beta2
    wait: true
    wait_sleep: 10
    wait_timeout: 120
    wait_condition:
      type: Ready
      status: "True"
  register: kafka_cluster_status
  tags:
    - cluster
    - kafka
