---
# Check Polaris namespace
- name: Wait for Polaris namespace to be active
  kubernetes.core.k8s_info:
    kind: Namespace
    name: "{{ polaris_namespace | default('polaris') }}"
    api_version: v1
  register: polaris_ns_status
  until:
    polaris_ns_status.resources[0].status.phase is defined and polaris_ns_status.resources[0].status.phase == "Active"
  retries: 30
  delay: 10
  tags:
    - namespace
    - polaris

# Check PostgreSQL deployment in Polaris namespace
- name: Wait for PostgreSQL deployment to be ready
  kubernetes.core.k8s_info:
    kind: StatefulSet
    name: postgresql
    namespace: "{{ polaris_namespace | default('polaris') }}"
    api_version: apps/v1
  register: postgresql_status
  until: >
    postgresql_status.resources[0].status.availableReplicas is defined and
    postgresql_status.resources[0].status.availableReplicas > 0 and postgresql_status.resources[0].status.readyReplicas
    is defined and postgresql_status.resources[0].status.readyReplicas == postgresql_status.resources[0].status.replicas
  retries: 60
  delay: 10
  tags:
    - deployment
    - polaris

# Check Polaris deployment
- name: Wait for Polaris deployment to be ready
  kubernetes.core.k8s_info:
    kind: Deployment
    name: polaris
    namespace: "{{ polaris_namespace | default('polaris') }}"
    api_version: apps/v1
  register: polaris_server_status
  until: >
    polaris_server_status.resources[0].status.availableReplicas is defined and
    polaris_server_status.resources[0].status.availableReplicas > 0 and
    polaris_server_status.resources[0].status.readyReplicas is defined and
    polaris_server_status.resources[0].status.readyReplicas == polaris_server_status.resources[0].status.replicas
  retries: 60
  delay: 10
  tags:
    - deployment
    - polaris

- name: Wait for Polaris bootstrap job to be completed successfully
  kubernetes.core.k8s_info:
    kind: Job
    name: polaris-bootstrap
    namespace: "{{ polaris_namespace | default('polaris') }}"
    api_version: batch/v1
  register: polaris_bootstrap_status
  until: >
    polaris_bootstrap_status.resources[0].status.succeeded is defined and
    polaris_bootstrap_status.resources[0].status.succeeded > 0
  retries: 60
  delay: 10
  tags:
    - job
    - polaris

- name: Ensure Polaris purge job is suspended
  kubernetes.core.k8s_info:
    kind: Job
    name: polaris-purge
    namespace: "{{ polaris_namespace | default('polaris') }}"
    api_version: batch/v1
  register: polaris_purge_status
  until: >
    polaris_purge_status.resources[0].spec.suspend is defined and polaris_purge_status.resources[0].spec.suspend == true
  retries: 60
  delay: 10
  tags:
    - job
    - polaris
