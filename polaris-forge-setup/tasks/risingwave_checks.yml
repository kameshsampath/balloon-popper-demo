---
# Check Risingwave namespace
- name: Wait for Risingwave namespace to be active
  kubernetes.core.k8s_info:
    kind: Namespace
    name: "{{ risingwave_namespace | default('risingwave') }}"
    api_version: v1
  register: risingwave_ns_status
  until: risingwave_ns_status.resources[0].status.phase is defined and risingwave_ns_status.resources[0].status.phase ==
    "Active"
  retries: 30
  delay: 10
  tags:
    - namespace
    - risingwave

# Check Risingwave Compute deployment
- name: Wait for Risingwave compute deployment to be ready
  kubernetes.core.k8s_info:
    kind: StatefulSet
    name: risingwave-compute
    namespace: "{{ risingwave_namespace | default('risingwave') }}"
    api_version: apps/v1
  register: risingwave_compute_status
  until: >
    risingwave_compute_status.resources[0].status.availableReplicas is defined and
    risingwave_compute_status.resources[0].status.availableReplicas > 0 and
    risingwave_compute_status.resources[0].status.readyReplicas is defined and
    risingwave_compute_status.resources[0].status.readyReplicas == risingwave_compute_status.resources[0].status.replicas
  retries: 60
  delay: 10
  tags:
    - deployment
    - risingwave

# Check Risingwave Frontend deployment
- name: Wait for Risingwave frontend deployment to be ready
  kubernetes.core.k8s_info:
    kind: Deployment
    name: risingwave-frontend
    namespace: "{{ risingwave_namespace | default('risingwave') }}"
    api_version: apps/v1
  register: risingwave_frontend_status
  until: >
    risingwave_frontend_status.resources[0].status.availableReplicas is defined and
    risingwave_frontend_status.resources[0].status.availableReplicas > 0 and
    risingwave_frontend_status.resources[0].status.readyReplicas is defined and
    risingwave_frontend_status.resources[0].status.readyReplicas == risingwave_frontend_status.resources[0].status.replicas
  retries: 60
  delay: 10
  tags:
    - deployment
    - risingwave

# Check Risingwave Compactor deployment
- name: Wait for Risingwave compute deployment to be ready
  kubernetes.core.k8s_info:
    kind: Deployment
    name: risingwave-compactor
    namespace: "{{ risingwave_namespace | default('risingwave') }}"
    api_version: apps/v1
  register: risingwave_compactor_status
  until: >
    risingwave_compactor_status.resources[0].status.availableReplicas is defined and
    risingwave_compactor_status.resources[0].status.availableReplicas > 0 and
    risingwave_compactor_status.resources[0].status.readyReplicas is defined and
    risingwave_compactor_status.resources[0].status.readyReplicas == risingwave_compactor_status.resources[0].status.replicas
  retries: 60
  delay: 10
  tags:
    - deployment
    - risingwave

# Check Risingwave Compute deployment
- name: Wait for Risingwave meta deployment to be ready
  kubernetes.core.k8s_info:
    kind: StatefulSet
    name: risingwave-meta
    namespace: "{{ risingwave_namespace | default('risingwave') }}"
    api_version: apps/v1
  register: risingwave_meta_status
  until: >
    risingwave_meta_status.resources[0].status.availableReplicas is defined and
    risingwave_meta_status.resources[0].status.availableReplicas > 0 and
    risingwave_meta_status.resources[0].status.readyReplicas is defined and
    risingwave_meta_status.resources[0].status.readyReplicas == risingwave_meta_status.resources[0].status.replicas
  retries: 60
  delay: 10
  tags:
    - deployment
    - risingwave
